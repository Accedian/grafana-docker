# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  gh: circleci/github-cli@2.5
  pca-bes: accedian/pca-bes@1.21.0

# Jobs
jobs:
  build:
    working_directory: ~/repo
    machine: true
    resource_class: accedian/staging_bes-ubuntu-medium

    environment:
      CGO_ENABLED: 1

    steps:
      - pca-bes/workspacesetup

      - run:
          name: "Create a temp directory for artifacts"
          command: |
            mkdir -p /tmp/artifacts

      - run:
          name: Building Docker Container
          command: make build

      - run:
          name: "install helm"
          command: |
            wget -LO helm.tar.gz https://get.helm.sh/helm-v3.17.2-linux-amd64.tar.gz  # legit:ignore-pipeline
            tar xf helm.tar.gz linux-amd64/helm
            sudo mv linux-amd64/helm /usr/local/bin
      - run:
          name: "make chart"
          command: |
            make helm 

  release:
    working_directory: ~/repo
    machine: true
    resource_class: accedian/staging_bes-ubuntu-medium
    steps:
      - pca-bes/workspacesetup
      - pca-bes/push_setup
      - run:
          name: "Push image to GCR"
          command: |
            DOCKER_VER=$(cat current-version)
            export DOCKER_VER
            make push
            
            # echo "devhub docker login"
            # echo ${DEVHUB_TOKEN} | docker login -u ${DEVHUB_USER} --password-stdin https://artifactory.devhub-cloud.cisco.com
            # make circleci-devhubpush

      - run:
          name: "install helm"
          command: |
            wget -LO helm.tar.gz https://get.helm.sh/helm-v3.17.2-linux-amd64.tar.gz  # legit:ignore-pipeline
            tar xf helm.tar.gz linux-amd64/helm
            sudo mv linux-amd64/helm /usr/local/bin
      - run:
          name: "login helm"
          command: |
            echo ${GCR_DOCKER_RW_PASSWORD} | base64 -d | docker login -u ${GCR_DOCKER_RW_USERNAME} --password-stdin https://us-docker.pkg.dev
      - run:
          name: "make chart"
          command: |
            export DOCKER_VER=$(git semver get)
            make helm-push DOCKER_VER=$DOCKER_VER 

workflows:
  version: 2.1
  build_only:
    when:
      not:
        and:
          - or:
            - equal: [master, << pipeline.git.branch >>]
            - equal: [main, << pipeline.git.branch >>]
            - matches:
                pattern: /release\/.*/
                value: << pipeline.git.branch >>
          - matches:
              pattern: "^https://github.com/[Aa]ccedian/.*"
              value: << pipeline.project.git_url >>

    jobs:
      - build:
          context: bes-builder-gcp-skybuilder-prd-51843

  build_and_release:
    when: 
      and:
        - or:
          - equal: [master, << pipeline.git.branch >>]
          - equal: [main, << pipeline.git.branch >>]
          - matches:
              pattern: /release\/.*/
              value: << pipeline.git.branch >>
        - matches:
            pattern: "^https://github.com/[Aa]ccedian/.*"
            value: << pipeline.project.git_url >>
    jobs:  
      - build:
          context: bes-builder-gcp-skybuilder-prd-51843
      - release:
          context: bes-builder-gcp-skybuilder-prd-51843
          requires:
            - build
          filters:
            branches:
              only: 
                - main
                - master       
                - /release\/.*/
      - pca-bes/image_signing:
          context: bes-builder-gcp-skybuilder-prd-51843
          requires:
            - release
          filters:
            branches:
              only:
                - main
                - master
                - /release\/.*/
